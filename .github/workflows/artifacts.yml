name: Create artifacts on push to main

on:  
  push:
    branches: [ main ]
    paths:
      - '**.rs'
      - 'Cargo.lock'
      - 'Cargo.toml'
      - '**.dart'
      - 'Dockerfile'

env:
  CARGO_TERM_COLOR: always

jobs:
  build_x64:
    name: Build for amd64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build docker image for one stage
      uses: docker/build-push-action@v5
      with:
        context: .
        target: builder
        tags:
          lofigirl:latest
    - name: Extract binaries from the docker
      run: |
        mkdir -p ${{ github.workspace }}/bin
        docker cp $(docker create lofigirl:latest):/app/bin/. ${{ github.workspace }}/bin
    - name: Archive production artifact - server
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_server_amd64
        path: ${{ github.workspace }}/bin/lofigirl_server
        overwrite: true
    - name: Archive production artifact - client
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_client_amd64
        path: ${{ github.workspace }}/bin/lofigirl_client
        overwrite: true
    - name: Archive production artifact - standalone client
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_client_standalone_amd64
        path: ${{ github.workspace }}/bin/lofigirl_client_standalone
        overwrite: true
  build_arm64:
    name: Build for arm64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build docker image for one stage
      uses: docker/build-push-action@v5
      with:
        context: .
        target: builder
        file: Dockerfile.arm64
        tags:
          lofigirl:latest
    - name: Extract binaries from the docker
      run: |
        mkdir -p ${{ github.workspace }}/bin
        docker cp $(docker create lofigirl:latest):/app/bin/. ${{ github.workspace }}/bin
    - name: Archive production artifact - server
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_server_arm64
        path: ${{ github.workspace }}/bin/lofigirl_server
        overwrite: true
    - name: Archive production artifact - client
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_client_arm64
        path: ${{ github.workspace }}/bin/lofigirl_client
        overwrite: true
    - name: Archive production artifact - standalone client
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_client_standalone_arm64
        path: ${{ github.workspace }}/bin/lofigirl_client_standalone
        overwrite: true
  build_armhf:
    name: Build for armhf
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build docker image for one stage
      uses: docker/build-push-action@v5
      with:
        context: .
        target: builder
        file: Dockerfile.armhf
        tags:
          lofigirl:latest
    - name: Extract binaries from the docker
      run: |
        mkdir -p ${{ github.workspace }}/bin
        docker cp $(docker create lofigirl:latest):/app/bin/. ${{ github.workspace }}/bin
    - name: Archive production artifact - server
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_server_armhf
        path: ${{ github.workspace }}/bin/lofigirl_server
        overwrite: true
    - name: Archive production artifact - client
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_client_armhf
        path: ${{ github.workspace }}/bin/lofigirl_client
        overwrite: true
    - name: Archive production artifact - standalone client
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_client_standalone_armhf
        path: ${{ github.workspace }}/bin/lofigirl_client_standalone
        overwrite: true