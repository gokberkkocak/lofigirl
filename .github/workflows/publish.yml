name: Create Release Builds

on:
  push:
    tags:
      - "v*" # matches v1.0.1, v1.2, v2, etc

env:
  CARGO_TERM_COLOR: always
  
jobs:
  once:
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

  build_server:
    name: Create server/standalone release builds and upload binaries for linux
    needs: once
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build docker image for one stage
      uses: docker/build-push-action@v5
      with:
        context: .
        target: builder
        tags:
          lofigirl:latest
    - name: Extract binary
      run: |
        mkdir -p ${{ github.workspace }}/bin
        docker cp $(docker create lofigirl:latest):/app/bin/. ${{ github.workspace }}/bin
    - name: Make Zip(s)
      run: |
        7z a -tzip ${{ github.workspace }}/bin/lofigirl_client.zip ${{ github.workspace }}/bin/lofigirl_client
        7z a -tzip ${{ github.workspace }}/bin/lofigirl_client_standalone.zip ${{ github.workspace }}/bin/lofigirl_client_standalone
        7z a -tzip ${{ github.workspace }}/bin/lofigirl_server.zip ${{ github.workspace }}/bin/lofigirl_server
    - name: Upload Release Asset Client
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/bin/lofigirl_client.zip
        asset_name: lofigirl-client-linux.zip
        asset_content_type: application/octet-stream
    - name: Upload Release Asset Standalone Client
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/bin/lofigirl_client_standalone.zip
        asset_name: lofigirl-client-standalone-linux.zip
        asset_content_type: application/octet-stream
    - name: Upload Release Asset Server
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/bin/lofigirl_server.zip
        asset_name: lofigirl-server-linux.zip
        asset_content_type: application/octet-stream
  build_client:
    name: Create cross-platform client release build and upload binaries
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build release version
      run: cargo build --release -p lofigirl_client --features notify
    - name: Make Zip
      run: 
        7z a -tzip ${{ github.workspace }}/target/release/lofigirl-with-notifications-${{ matrix.os }}.zip ${{ github.workspace }}/target/release/lofigirl* "-x!*.d" "-x!*.pdb"
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/target/release/lofigirl-with-notifications-${{ matrix.os }}.zip
        asset_name: lofigirl-with-notifications-${{ matrix.os }}.zip
        asset_content_type: application/octet-stream
  build_wasm_frontend:
    name: Create single platform wasm
    needs: once
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build release version
      run: |
        cargo install cargo-make
        cd lofigirl_web_client
        cargo make build_release
    - name: Make Zip
      run: 
        7z a -tzip ${{ github.workspace }}/lofigirl-wasm-web-client.zip ${{ github.workspace }}/lofigirl_web_client/index.html ${{ github.workspace }}/lofigirl_web_client/pkg/
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/lofigirl-wasm-web-client.zip
        asset_name: lofigirl-wasm-web-client.zip
        asset_content_type: application/octet-stream    
  build_flutter_frontend_web:
    name: Create flutter web
    needs: once
    runs-on: ubuntu-latest
    steps:  
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - name: Build release version
      run: | 
       cd lofigirl_flutter_client
       flutter pub get
       flutter build web
    - name: Make Zip
      run: 
        7z a -tzip ${{ github.workspace }}/lofigirl-flutter-web-client.zip  ${{ github.workspace }}/lofigirl_flutter_client/build/web/
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/lofigirl-flutter-web-client.zip
        asset_name: lofigirl-flutter-web-client.zip
        asset_content_type: application/octet-stream  
  build_flutter_frontend_windows:
    name: Create flutter windows
    needs: once
    runs-on: windows-latest
    steps:  
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - name: Build release version
      run: |
        cd lofigirl_flutter_client
        flutter config --enable-windows-desktop
        flutter pub get
        flutter build windows
    - name: Make Zip
      run: 
        7z a -tzip ${{ github.workspace }}/lofigirl-flutter-windows-client.zip ${{ github.workspace }}/lofigirl_flutter_client/build/windows/runner/Release/
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/lofigirl-flutter-windows-client.zip
        asset_name: lofigirl-flutter-windows-client.zip
        asset_content_type: application/octet-stream  
  build_flutter_frontend_android:
    name: Create flutter android
    needs: once
    runs-on: ubuntu-latest
    steps:  
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - name: Build release version
      run: |
        cd lofigirl_flutter_client
        flutter pub get
        flutter build apk
    - name: Move APK
      run: 
        mv ${{ github.workspace }}/lofigirl_flutter_client/build/app/outputs/flutter-apk/app-release.apk ${{ github.workspace }}/lofigirl-flutter-android-client.apk
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/lofigirl-flutter-android-client.apk
        asset_name: lofigirl-flutter-android-client.apk
        asset_content_type: application/octet-stream  
  build_flutter_frontend_linux:
    name: Create flutter linux
    needs: once
    runs-on: ubuntu-latest
    steps:  
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - name: Get build dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
    - name: Build release version
      run: |    
        cd lofigirl_flutter_client
        flutter config --enable-linux-desktop
        flutter pub get
        flutter build linux
    - name: Make Zip
      run: 
        7z a -tzip ${{ github.workspace }}/lofigirl-flutter-linux-client.zip ${{ github.workspace }}/lofigirl_flutter_client/build/linux/x64/release/bundle/
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.once.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/lofigirl-flutter-linux-client.zip
        asset_name: lofigirl-flutter-linux-client.zip
        asset_content_type: application/octet-stream  