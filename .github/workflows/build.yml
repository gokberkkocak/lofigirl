name: Build on Pull Request

on:  
  pull_request:
    branches: [ main ]
    paths:
      - '**.rs'
      - 'Cargo.lock'
      - 'Cargo.toml'
      - '**.dart'
      - 'Dockerfile'

env:
  CARGO_TERM_COLOR: always
  
jobs:
  build_server:
    name: Create server/standalone builds
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build docker image for one stage
      uses: docker/build-push-action@v5
      with:
        context: .
        target: builder
        tags:
          lofigirl:latest
    - name: Extract binaries from the docker
      run: |
        mkdir -p ${{ github.workspace }}/bin
        docker cp $(docker create lofigirl:latest):/app/bin/. ${{ github.workspace }}/bin
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_server
        path: ${{ github.workspace }}/bin/lofigirl_server
        overwrite: true
  build_client:
    name: Client build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      run: cargo build --release -p lofigirl_client --features notify
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lofigirl_client
        path: target/release/lofigirl_client
        overwrite: true
  build_wasm_frontend:
    name: Build single platform wasm
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      run: |
        cargo install cargo-make
        cd lofigirl_web_client
        cargo make build
  build_flutter_frontend:
    name: Build flutter frontend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - name: Build / Test
      run: |
       cd lofigirl_flutter_client
       flutter pub get
       flutter test
       flutter build web